name: Publish
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Check and Test"]
    branches: [main]
    types:
      - completed

env:
  BUMP_COMMIT_MESSAGE: "chore(ci): bump packages"
  
jobs:
  printJob:    
    name: Print event
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT"
    - name: Debug conditions
      env:
        GITHUB_CONTEXT_WORKFLOW_DISPATCH: ${{  toJson(github.event_name == 'workflow_dispatch') }}
        GITHUB_CONTEXT_WORKFLOW_RUN_CONCLUSION: ${{ toJson(github.event.workflow_run.conclusion == 'success') }}
        GITHUB_CONTEXT_IS_BUMP_PACKAGES: ${{ toJson(startsWith(github.event.workflow_run.head_commit.message, env.BUMP_COMMIT_MESSAGE)) }}
        COMM_MESS: ${{ env.BUMP_COMMIT_MESSAGE }}
      run: |
        echo GITHUB_CONTEXT_WORKFLOW_DISPATCH: "$GITHUB_CONTEXT_WORKFLOW_DISPATCH"
        echo ---
        echo GITHUB_CONTEXT_WORKFLOW_RUN_CONCLUSION: "$GITHUB_CONTEXT_WORKFLOW_RUN_CONCLUSION"
        echo ---
        echo GITHUB_CONTEXT_IS_BUMP_PACKAGES: "$GITHUB_CONTEXT_IS_BUMP_PACKAGES"
        echo ---
        echo "$COMM_MESS"
  publish:
    if: |
      github.event.workflow_dispatch || (
        github.event.workflow_run.conclusion == 'success' &&
        startsWith(
          github.event.workflow_run.head_commit.message, 'chore(ci): bump packages'
        )
      )
    runs-on: ubuntu-latest

    steps:
    - name: "OK"
      run: |
        echo "ok"
#     - uses: actions/checkout@v3
#       with:
#         # don't checkout a detatched HEAD
#         ref: ${{ github.head_ref }}

#         # this is important so git log can pick up on
#         # the whole history to generate the list of AUTHORS
#         fetch-depth: '0'

#     - name: Setup git
#       run: |
#         git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
#         git config --local user.name "github-actions[bot]"

#     - name: "Use NodeJS 14"
#       uses: actions/setup-node@v2
#       with:
#         node-version: '14'

#     - name: "Publish what is not already in NPM"
#       env:
#         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
#       run: |
#         npx lerna list -a --since HEAD~1 --json | \
#           jq '{tag: (.[].name + "@" + .[].version)}' | \
#           jq -r .tag | \
#           xargs -i sh -c "git tag -a {} -m {} || true"
#         git push --follow-tags

